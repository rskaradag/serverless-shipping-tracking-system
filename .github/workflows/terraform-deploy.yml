name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      DYNAMODB_TABLE_NAME: ${{ secrets.DYNAMODB_TABLE_NAME }}
      SQS_QUEUE_NAME: ${{ secrets.SQS_QUEUE_NAME }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          cd lambda/create_tracking
          pip install -r requirements.txt -t .

      - name: Check Python Version
        run: python --version

      # - name: Run Unit Tests
      #   run: |
      #     cd lambda/create_tracking
      #     python -m pytest test_handler.py --disable-warnings
      #   continue-on-error: false

      - name: Package Tracking Lambda Function
        run: |
          cd lambda/create_tracking
          zip -r create_tracking_lambda.zip .
          mv create_tracking_lambda.zip ../../terraform

      - name: Upload Tracking Lambda Package as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-package
          path: terraform/create_tracking_lambda.zip

      - name: Package Consumer Lambda Function
        run: |
          cd lambda/consumer
          zip -r consumer.zip .
          mv consumer.zip ../../terraform

      - name: Upload Consumer Lambda Package as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-package
          path: terraform/Consumer.zip
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5

      - name: Configure AWS Credentials
        run: |
          echo "Configuring AWS CLI..."
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set region "$AWS_REGION"

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Initialize Terraform
        run: terraform init 
        working-directory: terraform/

      - name: Validate Terraform Configuration
        run: terraform validate
        working-directory: terraform/

      - name: Plan Terraform Changes
        run: |
           terraform plan -out=tfplan \
             -var aws_region=$AWS_REGION \
             -var s3_bucket_name=$S3_BUCKET_NAME \
             -var dynamodb_table_name=$DYNAMODB_TABLE_NAME \
             -var sqs_queue_name=$SQS_QUEUE_NAME

        working-directory: terraform/

      - name: Apply Terraform Changes
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
            terraform apply -auto-approve \
              -var aws_region=$AWS_REGION \
              -var s3_bucket_name=$S3_BUCKET_NAME \
              -var dynamodb_table_name=$DYNAMODB_TABLE_NAME \
              -var sqs_queue_name=$SQS_QUEUE_NAME
        working-directory: terraform/